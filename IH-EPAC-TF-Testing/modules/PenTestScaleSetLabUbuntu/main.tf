
/**
 * Pentesting Lab Infrastructure Module with VM Scale Sets
 * 
 * This module creates a scalable lab environment with:
 * - Kali Linux, Windows 11, Windows 10, and RHEL VM Scale Sets
 * - All VMs in the same VNet for network connectivity
 * - Azure Bastion for secure access
 * - Entra ID (Azure AD) integration for authentication
 */

provider "azurerm" {
  features {}
}

# Resource Group
resource "azurerm_resource_group" "pentest_lab" {
  name     = var.resource_group_name
  location = var.location
}

# Virtual Network
resource "azurerm_virtual_network" "pentest_vnet" {
  name                = "${var.prefix}-vnet"
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.pentest_lab.location
  resource_group_name = azurerm_resource_group.pentest_lab.name
}

# Subnets
resource "azurerm_subnet" "vmss_subnet" {
  name                 = "vmss-subnet"
  resource_group_name  = azurerm_resource_group.pentest_lab.name
  virtual_network_name = azurerm_virtual_network.pentest_vnet.name
  address_prefixes     = ["10.0.1.0/24"]
}

resource "azurerm_subnet" "bastion_subnet" {
  name                 = "AzureBastionSubnet"  # This name is required by Azure
  resource_group_name  = azurerm_resource_group.pentest_lab.name
  virtual_network_name = azurerm_virtual_network.pentest_vnet.name
  address_prefixes     = ["10.0.2.0/24"]
}

# Public IP for Bastion
resource "azurerm_public_ip" "bastion_ip" {
  name                = "${var.prefix}-bastion-ip"
  location            = azurerm_resource_group.pentest_lab.location
  resource_group_name = azurerm_resource_group.pentest_lab.name
  allocation_method   = "Static"
  sku                 = "Standard"
}

# Bastion Host
resource "azurerm_bastion_host" "lab_bastion" {
  name                = "${var.prefix}-bastion"
  location            = azurerm_resource_group.pentest_lab.location
  resource_group_name = azurerm_resource_group.pentest_lab.name

  ip_configuration {
    name                 = "configuration"
    subnet_id            = azurerm_subnet.bastion_subnet.id
    public_ip_address_id = azurerm_public_ip.bastion_ip.id
  }
}

# Network Security Group for VM Scale Sets
resource "azurerm_network_security_group" "vmss_nsg" {
  name                = "${var.prefix}-vmss-nsg"
  location            = azurerm_resource_group.pentest_lab.location
  resource_group_name = azurerm_resource_group.pentest_lab.name

  # Allow internal traffic within the VNet
  security_rule {
    name                       = "AllowVnetInBound"
    priority                   = 100
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "*"
    source_address_prefix      = "VirtualNetwork"
    destination_address_prefix = "VirtualNetwork"
  }
}

# Associate NSG with VMSS subnet
resource "azurerm_subnet_network_security_group_association" "vmss_subnet_nsg" {
  subnet_id                 = azurerm_subnet.vmss_subnet.id
  network_security_group_id = azurerm_network_security_group.vmss_nsg.id
}

# User Assigned Identity for VM Scale Sets (for Entra ID integration)
resource "azurerm_user_assigned_identity" "vmss_identity" {
  name                = "${var.prefix}-vmss-identity"
  location            = azurerm_resource_group.pentest_lab.location
  resource_group_name = azurerm_resource_group.pentest_lab.name
}

# Assign Azure AD admin role to the VMSS identity
resource "azurerm_role_assignment" "vmss_identity_role" {
  scope                = azurerm_resource_group.pentest_lab.id
  role_definition_name = "Virtual Machine Administrator Login"
  principal_id         = azurerm_user_assigned_identity.vmss_identity.principal_id
}

# VM Scale Sets

# Kali Linux VMSS
resource "azurerm_linux_virtual_machine_scale_set" "kali_vmss" {
  name                = "${var.prefix}-kali-vmss"
  resource_group_name = azurerm_resource_group.pentest_lab.name
  location            = azurerm_resource_group.pentest_lab.location
  sku                 = var.vm_size
  instances           = var.kali_instance_count
  admin_username      = var.admin_username
  
  disable_password_authentication = true

  admin_ssh_key {
    username   = var.admin_username
    public_key = file(var.public_key_path)
  }

  source_image_reference {
    publisher = "kali-linux"
    offer     = "kali"
    sku       = "kali-2023-4"
    version   = "latest"
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  network_interface {
    name    = "kali-vmss-nic"
    primary = true

    ip_configuration {
      name      = "internal"
      primary   = true
      subnet_id = azurerm_subnet.vmss_subnet.id
    }
  }

  identity {
    type         = "UserAssigned"
    identity_ids = [azurerm_user_assigned_identity.vmss_identity.id]
  }

  # Extension for Entra ID login
  extension {
    name                       = "AADSSHLoginForLinux"
    publisher                  = "Microsoft.Azure.ActiveDirectory"
    type                       = "AADSSHLoginForLinux"
    type_handler_version       = "1.0"
    auto_upgrade_minor_version = true
  }

  # Custom data script to install pentesting tools
  custom_data = base64encode(<<-EOF
    #!/bin/bash
    apt-get update
    apt-get install -y metasploit-framework nmap wireshark
  EOF
  )

  tags = {
    environment = "pentest-lab"
    role        = "attack-system"
  }
}

# Windows 11 VMSS
resource "azurerm_windows_virtual_machine_scale_set" "win11_vmss" {
  name                = "${var.prefix}-win11-vmss"
  resource_group_name = azurerm_resource_group.pentest_lab.name
  location            = azurerm_resource_group.pentest_lab.location
  sku                 = var.vm_size
  instances           = var.win11_instance_count
  admin_username      = var.admin_username
  admin_password      = var.admin_password
  
  # Enable automatic updates
  enable_automatic_updates = true
  patch_mode               = "AutomaticByOS"

  source_image_reference {
    publisher = "MicrosoftWindowsDesktop"
    offer     = "Windows-11"
    sku       = "win11-22h2-pro"
    version   = "latest"
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  } // Name of the disk

  network_interface {
    name    = "win11-vmss-nic"
    primary = true

    ip_configuration {
      name      = "internal"
      primary   = true
      subnet_id = azurerm_subnet.vmss_subnet.id
    }
  }

  identity {
    type         = "UserAssigned"
    identity_ids = [azurerm_user_assigned_identity.vmss_identity.id]
  }

  # Extension for Entra ID login
  extension {
    name                       = "AADLoginForWindows"
    publisher                  = "Microsoft.Azure.ActiveDirectory"
    type                       = "AADLoginForWindows"
    type_handler_version       = "1.0"
    auto_upgrade_minor_version = true
  }

  tags = {
    environment = "pentest-lab"
    role        = "target-system"
    os          = "windows-11"
  }
}

# Windows 10 VMSS
resource "azurerm_windows_virtual_machine_scale_set" "win10_vmss" {
  name                = "${var.prefix}-win10-vmss"
  resource_group_name = azurerm_resource_group.pentest_lab.name
  location            = azurerm_resource_group.pentest_lab.location
  sku                 = var.vm_size
  instances           = var.win10_instance_count
  admin_username      = var.admin_username
  admin_password      = var.admin_password
  
  # Enable automatic updates
  enable_automatic_updates = true
  patch_mode               = "AutomaticByOS"

  source_image_reference {
    publisher = "MicrosoftWindowsDesktop"
    offer     = "Windows-10"
    sku       = "win10-22h2-pro"
    version   = "latest"
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  network_interface {
    name    = "win10-vmss-nic"
    primary = true

    ip_configuration {
      name      = "internal"
      primary   = true
      subnet_id = azurerm_subnet.vmss_subnet.id
    }
  }

  identity {
    type         = "UserAssigned"
    identity_ids = [azurerm_user_assigned_identity.vmss_identity.id]
  }

  # Extension for Entra ID login
  extension {
    name                       = "AADLoginForWindows"
    publisher                  = "Microsoft.Azure.ActiveDirectory"
    type                       = "AADLoginForWindows"
    type_handler_version       = "1.0"
    auto_upgrade_minor_version = true
  }

  tags = {
    environment = "pentest-lab"
    role        = "target-system"
    os          = "windows-10"
  }
}

# RHEL VMSS
resource "azurerm_linux_virtual_machine_scale_set" "rhel_vmss" {
  name                = "${var.prefix}-rhel-vmss"
  resource_group_name = azurerm_resource_group.pentest_lab.name
  location            = azurerm_resource_group.pentest_lab.location
  sku                 = var.vm_size
  instances           = var.rhel_instance_count
  admin_username      = var.admin_username
  
  disable_password_authentication = true

  admin_ssh_key {
    username   = var.admin_username
    public_key = file(var.public_key_path)
  }

  source_image_reference {
    publisher = "RedHat"
    offer     = "RHEL"
    sku       = "9-lvm-gen2"
    version   = "latest"
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  network_interface {
    name    = "rhel-vmss-nic"
    primary = true

    ip_configuration {
      name      = "internal"
      primary   = true
      subnet_id = azurerm_subnet.vmss_subnet.id
    }
  }

  identity {
    type         = "UserAssigned"
    identity_ids = [azurerm_user_assigned_identity.vmss_identity.id]
  }

  # Extension for Entra ID login
  extension {
    name                       = "AADSSHLoginForLinux"
    publisher                  = "Microsoft.Azure.ActiveDirectory"
    type                       = "AADSSHLoginForLinux"
    type_handler_version       = "1.0"
    auto_upgrade_minor_version = true
  }

  tags = {
    environment = "pentest-lab"
    role        = "target-system"
    os          = "rhel"
  }
}

# Autoscaling settings for Kali Linux VMSS
resource "azurerm_monitor_autoscale_setting" "kali_autoscale" {
  name                = "${var.prefix}-kali-autoscale"
  resource_group_name = azurerm_resource_group.pentest_lab.name
  location            = azurerm_resource_group.pentest_lab.location
  target_resource_id  = azurerm_linux_virtual_machine_scale_set.kali_vmss.id

  profile {
    name = "Default"

    capacity {
      default = var.kali_instance_count
      minimum = var.kali_instance_min
      maximum = var.kali_instance_max
    }

    rule {
      metric_trigger {
        metric_name        = "Percentage CPU"
        metric_resource_id = azurerm_linux_virtual_machine_scale_set.kali_vmss.id
        time_grain         = "PT1M"
        statistic          = "Average"
        time_window        = "PT5M"
        time_aggregation   = "Average"
        operator           = "GreaterThan"
        threshold          = 75
      }

      scale_action {
        direction = "Increase"
        type      = "ChangeCount"
        value     = "1"
        cooldown  = "PT5M"
      }
    }

    rule {
      metric_trigger {
        metric_name        = "Percentage CPU"
        metric_resource_id = azurerm_linux_virtual_machine_scale_set.kali_vmss.id
        time_grain         = "PT1M"
        statistic          = "Average"
        time_window        = "PT5M"
        time_aggregation   = "Average"
        operator           = "LessThan"
        threshold          = 25
      }

      scale_action {
        direction = "Decrease"
        type      = "ChangeCount"
        value     = "1"
        cooldown  = "PT5M"
      }
    }
  }
}

# Similar autoscaling settings for other VMSS instances
resource "azurerm_monitor_autoscale_setting" "win11_autoscale" {
  name                = "${var.prefix}-win11-autoscale"
  resource_group_name = azurerm_resource_group.pentest_lab.name
  location            = azurerm_resource_group.pentest_lab.location
  target_resource_id  = azurerm_windows_virtual_machine_scale_set.win11_vmss.id

  profile {
    name = "Default"

    capacity {
      default = var.win11_instance_count
      minimum = var.win11_instance_min
      maximum = var.win11_instance_max
    }

    rule {
      metric_trigger {
        metric_name        = "Percentage CPU"
        metric_resource_id = azurerm_windows_virtual_machine_scale_set.win11_vmss.id
        time_grain         = "PT1M"
        statistic          = "Average"
        time_window        = "PT5M"
        time_aggregation   = "Average"
        operator           = "GreaterThan"
        threshold          = 75
      }

      scale_action {
        direction = "Increase"
        type      = "ChangeCount"
        value     = "1"
        cooldown  = "PT5M"
      }
    }

    rule {
      metric_trigger {
        metric_name        = "Percentage CPU"
        metric_resource_id = azurerm_windows_virtual_machine_scale_set.win11_vmss.id
        time_grain         = "PT1M"
        statistic          = "Average"
        time_window        = "PT5M"
        time_aggregation   = "Average"
        operator           = "LessThan"
        threshold          = 25
      }

      scale_action {
        direction = "Decrease"
        type      = "ChangeCount"
        value     = "1"
        cooldown  = "PT5M"
      }
    }
  }
}

resource "azurerm_monitor_autoscale_setting" "win10_autoscale" {
  name                = "${var.prefix}-win10-autoscale"
  resource_group_name = azurerm_resource_group.pentest_lab.name
  location            = azurerm_resource_group.pentest_lab.location
  target_resource_id  = azurerm_windows_virtual_machine_scale_set.win10_vmss.id

  profile {
    name = "Default"

    capacity {
      default = var.win10_instance_count
      minimum = var.win10_instance_min
      maximum = var.win10_instance_max
    }

    rule {
      metric_trigger {
        metric_name        = "Percentage CPU"
        metric_resource_id = azurerm_windows_virtual_machine_scale_set.win10_vmss.id
        time_grain         = "PT1M"
        statistic          = "Average"
        time_window        = "PT5M"
        time_aggregation   = "Average"
        operator           = "GreaterThan"
        threshold          = 75
      }

      scale_action {
        direction = "Increase"
        type      = "ChangeCount"
        value     = "1"
        cooldown  = "PT5M"
      }
    }

    rule {
      metric_trigger {
        metric_name        = "Percentage CPU"
        metric_resource_id = azurerm_windows_virtual_machine_scale_set.win10_vmss.id
        time_grain         = "PT1M"
        statistic          = "Average"
        time_window        = "PT5M"
        time_aggregation   = "Average"
        operator           = "LessThan"
        threshold          = 25
      }

      scale_action {
        direction = "Decrease"
        type      = "ChangeCount"
        value     = "1"
        cooldown  = "PT5M"
      }
    }
  }
}

resource "azurerm_monitor_autoscale_setting" "rhel_autoscale" {
  name                = "${var.prefix}-rhel-autoscale"
  resource_group_name = azurerm_resource_group.pentest_lab.name
  location            = azurerm_resource_group.pentest_lab.location
  target_resource_id  = azurerm_linux_virtual_machine_scale_set.rhel_vmss.id

  profile {
    name = "Default"

    capacity {
      default = var.rhel_instance_count
      minimum = var.rhel_instance_min
      maximum = var.rhel_instance_max
    }

    rule {
      metric_trigger {
        metric_name        = "Percentage CPU"
        metric_resource_id = azurerm_linux_virtual_machine_scale_set.rhel_vmss.id
        time_grain         = "PT1M"
        statistic          = "Average"
        time_window        = "PT5M"
        time_aggregation   = "Average"
        operator           = "GreaterThan"
        threshold          = 75
      }

      scale_action {
        direction = "Increase"
        type      = "ChangeCount"
        value     = "1"
        cooldown  = "PT5M"
      }
    }

    rule {
      metric_trigger {
        metric_name        = "Percentage CPU"
        metric_resource_id = azurerm_linux_virtual_machine_scale_set.rhel_vmss.id
        time_grain         = "PT1M"
        statistic          = "Average"
        time_window        = "PT5M"
        time_aggregation   = "Average"
        operator           = "LessThan"
        threshold          = 25
      }

      scale_action {
        direction = "Decrease"
        type      = "ChangeCount"
        value     = "1"
        cooldown  = "PT5M"
      }
    }
  }
}